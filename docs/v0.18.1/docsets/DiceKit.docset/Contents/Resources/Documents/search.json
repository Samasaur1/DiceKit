{"Other Typealiases.html#/s:7DiceKit5DKDiea":{"name":"DKDie","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html\">Die</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit6DKDicea":{"name":"DKDice","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Dice.html\">Dice</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit6DKRolla":{"name":"DKRoll","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit10DKRollablea":{"name":"DKRollable","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html\">Rollable</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit20DKMultipleRollResulta":{"name":"DKMultipleRollResult","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/MultipleRollResult.html\">MultipleRollResult</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit7DKErrora":{"name":"DKError","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Error.html\">Error</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit13DKWeightedDiea":{"name":"DKWeightedDie","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/WeightedDie.html\">WeightedDie</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit8DKChancea":{"name":"DKChance","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Chance.html\">Chance</a></code>.</p>"},"Other Typealiases.html#/s:7DiceKit9DKChancesa":{"name":"DKChances","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Chances.html\">Chances</a></code>.</p>"},"Enums/Error.html#/s:7DiceKit5ErrorO20illegalNumberOfSidesyACSi_tcACmF":{"name":"illegalNumberOfSides(attempt:)","abstract":"<p>A number of sides was passed that wasn&rsquo;t allowed.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO11emptyStringyA2CmF":{"name":"emptyString","abstract":"<p>An empty string was passed to a string parser that doesn&rsquo;t accept empty strings.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO16nonNumericStringyA2CmF":{"name":"nonNumericString","abstract":"<p>A string was passed with nonnumeric characters that weren&rsquo;t expected.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO13illegalStringyACSS_tcACmF":{"name":"illegalString(string:)","abstract":"<p>An illegal string was passed.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO14divisionByZeroyA2CmF":{"name":"divisionByZero","abstract":"<p>Zero was passed to something that would have divided by it.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO15emptyDictionaryyA2CmF":{"name":"emptyDictionary","abstract":"<p>An empty dictionary was passed to something that needs a non-empty dictionary.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO16negativeArgumentyA2CmF":{"name":"negativeArgument","abstract":"<p>Arguments were passed that resulted in something being negative that needed to be positive. This doesn&rsquo;t necessarily mean that the arguments passed in this case were negative, and it is possible to pass some negative arguments, as long as they cancel each other out. All this error means is that the result of a computation would have been negative.</p>","parent_name":"Error"},"Enums/Error.html#/s:7DiceKit5ErrorO13chanceOverOneyA2CmF":{"name":"chanceOverOne","abstract":"<p>The chance of something happening was over 1, an impossibility.</p>","parent_name":"Error"},"Enums/RollComparison.html#/s:7DiceKit14RollComparisonO8orHigheryA2CmF":{"name":"orHigher","abstract":"<p>If it is greater than or equal to the target.</p>","parent_name":"RollComparison"},"Enums/RollComparison.html#/s:7DiceKit14RollComparisonO7orLoweryA2CmF":{"name":"orLower","abstract":"<p>If it is less than or equal to the target.</p>","parent_name":"RollComparison"},"Enums/RollComparison.html#/s:7DiceKit14RollComparisonO7exactlyyA2CmF":{"name":"exactly","abstract":"<p>If it is exactly equal to the target.</p>","parent_name":"RollComparison"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO3sumyA2CmF":{"name":"sum","abstract":"<p>Return the sum of all rolls.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO7highestyA2CmF":{"name":"highest","abstract":"<p>Return the highest roll.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO6lowestyA2CmF":{"name":"lowest","abstract":"<p>Return the lowest roll.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO8outsidesyA2CmF":{"name":"outsides","abstract":"<p>Return the sum of the highest and the lowest roll.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO11dropHighestyA2CmF":{"name":"dropHighest","abstract":"<p>Return the sum of everything but the highest roll.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO10dropLowestyA2CmF":{"name":"dropLowest","abstract":"<p>Return the sum of everything except the lowest roll. This is used in Pathfinder character generation.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO12dropOutsidesyA2CmF":{"name":"dropOutsides","abstract":"<p>Return the sum of everything except the highest and lowest rolls.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO7dropLowyACSi_tcACmF":{"name":"dropLow(amountToDrop:)","abstract":"<p>Return the sum of everything except the given number of lowest rolls.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html#/s:7DiceKit18MultipleRollResultO8dropHighyACSi_tcACmF":{"name":"dropHigh(amountToDrop:)","abstract":"<p>Return the sum of everything except the given number of highest rolls.</p>","parent_name":"MultipleRollResult"},"Enums/MultipleRollResult.html":{"name":"MultipleRollResult","abstract":"<p>An enum representing the type of result to return from rolling multiple times.</p>"},"Enums/RollComparison.html":{"name":"RollComparison","abstract":"<p>An enum representing a comparison between two <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>s.</p>"},"Enums/Error.html":{"name":"Error","abstract":"<p>An enum representing any error that could be thrown during the use of DiceKit.</p>"},"Structs/Chance.html#/s:7DiceKit6ChanceV1nSivp":{"name":"n","abstract":"<p>The numerator of the fraction</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV1dSivp":{"name":"d","abstract":"<p>The denominator of the fraction</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV5valueSdvp":{"name":"value","abstract":"<p>The decimal representation of the fraction.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV8fractionSi_Sitvp":{"name":"fraction","abstract":"<p>The fraction as a tuple (numerator, denominator).</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV6oneOut2ofACSi_tKFZ":{"name":"oneOut(of:)","abstract":"<p>Creates a new <code>Chance</code> object of the fraction form 1/d.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV_5outOfACSi_SitKcfc":{"name":"init(_:outOf:)","abstract":"<p>Creates a new <code>Chance</code> object of the fraction form n/d.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV8oneOutOfACSi_tKcfc":{"name":"init(oneOutOf:)","abstract":"<p>Creates a new <code>Chance</code> object of the fraction form 1/d.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV13approximatingACSd_tKcfc":{"name":"init(approximating:)","abstract":"<p>Creates a new <code>Chance</code> object approximating the given decimal.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV4zeroACvpZ":{"name":"zero","abstract":"<p>A <code>Chance</code> of zero.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV3oneACvpZ":{"name":"one","abstract":"<p>A <code>Chance</code> of one.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Chance"},"Structs/Chance.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Chance"},"Structs/Chance.html#/s:s25ExpressibleByFloatLiteralP0cD4TypeQa":{"name":"FloatLiteralType","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV12floatLiteralACSd_tcfc":{"name":"init(floatLiteral:)","abstract":"<p>Creates a new <code>Chance</code> object approximating the given decimal. There is no error-checking!</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV3gcdyS2i_SitFZ":{"name":"gcd(_:_:)","abstract":"<p>The greatest common divisor/factor of two integers.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV3lcmyS2i_SitFZ":{"name":"lcm(_:_:)","abstract":"<p>The least/lowest common multiple of two integers.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds two <code>Chance</code> instances together.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtracts one <code>Chance</code> instance from another.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV2peoiyyACz_ACtFZ":{"name":"+=(_:_:)","abstract":"<p>Adds the two <code>Chance</code> instances and sets the left-hand instance to the sum.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Chance"},"Structs/Chance.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Chance"},"Structs/Chances.html#/s:7DiceKit7ChancesVACycfc":{"name":"init()","abstract":"<p>Creates a new <code>Chances</code> object with no data.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesV7chancesACSDySiAA6ChanceVG_tcfc":{"name":"init(chances:)","abstract":"<p>Creates a new <code>Chances</code> object with the given chances.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesV7chancesACSi_AA6ChanceVtd_tcfc":{"name":"init(chances:)","abstract":"<p>Creates a new <code>Chances</code> object with the given chances.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesV7chancesACSaySi_AA6ChanceVtG_tcfc":{"name":"init(chances:)","abstract":"<p>Creates a new <code>Chances</code> object with the given chances.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesV2ofAA6ChanceVSi_tcip":{"name":"subscript(of:)","abstract":"<p>The chance of the given roll occurring.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesV10normalizedACvp":{"name":"normalized","abstract":"<p>A normalized version of this <code>Chances</code> instance. The sum of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Chance.html\">Chance</a></code>s will be 1</p>","parent_name":"Chances"},"Structs/Chances.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Chances"},"Structs/Chances.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Chances"},"Structs/Chances.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Chances"},"Structs/Chances.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Chances"},"Structs/Chances.html":{"name":"Chances","abstract":"<p>A struct that represents the chances of different <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>s happening.</p>"},"Structs/Chance.html":{"name":"Chance","abstract":"<p>A struct that represents the chance or probability of something happening.</p>"},"Structs/DieSide.html#/s:7DiceKit7DieSideVyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Create a new DieSide with the given value.</p>","parent_name":"DieSide"},"Structs/DieSide.html#/s:7DiceKit7DieSideV5valuexvp":{"name":"value","abstract":"<p>The value that this DieSide will return when rolled.</p>","parent_name":"DieSide"},"Structs/DieSide.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"DieSide"},"Structs/DieSide.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"DieSide"},"Structs/DieSide.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"DieSide"},"Structs/DieSide.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"DieSide"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV5sidesSDySiAA0D4SideVyxGGvp":{"name":"sides","abstract":"<p>A dictionary that maps the rolls of the die to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DieSide.html\">DieSide</a></code>s passed to the initializer</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV9replacing_4withACyxGAA0D4SideVyxG_AItF":{"name":"replacing(_:with:)","abstract":"<p>Creates a new <code>CustomDie</code>, replacing one side with a new one.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieVyACyxGAA0D4SideVyxGd_tKcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>CustomDie</code> with the given sides.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV5sidesACyxGSayAA0D4SideVyxGG_tKcfc":{"name":"init(sides:)","abstract":"<p>Creates a new <code>CustomDie</code> with the given sides.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV6copyOfACyxGAE_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>CustomDie</code> that is a copy of the given <code>CustomDie</code>.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV4rollAA0D4SideVyxGyF":{"name":"roll()","abstract":"<p>Rolls this <code>CustomDie</code>.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV6chance2ofAA6ChanceVAA0D4SideVyxG_tF":{"name":"chance(of:)","abstract":"<p>Determined the chance of rolling the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DieSide.html\">DieSide</a></code>.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"CustomDie"},"Structs/CustomDie.html#/s:7DiceKit9CustomDieV4copyACyxGyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>CustomDie</code> with separate memory.</p>","parent_name":"CustomDie"},"Structs/CustomDie.html":{"name":"CustomDie","abstract":"<p>A class that allows for dice with custom sides instead of numbers.</p>"},"Structs/DieSide.html":{"name":"DieSide","abstract":"<p>A class that masks a side, returning a custom value in lieu of a number.</p>"},"Results.html#/s:7DiceKit4Rolla":{"name":"Roll","abstract":"<p>The result of any <code>roll</code> method from any <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html\">Rollable</a></code> type.</p>"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV7chancesSDySiAA6ChanceVGvp":{"name":"chances","abstract":"<p>The rolls and the chances of them occurring.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV7chancesAcA7ChancesV_tKcfc":{"name":"init(chances:)","abstract":"<p>Creates a new <code>WeightedDie</code> with the given rolls and chances of them occurring.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV5sidesSivp":{"name":"sides","abstract":"<p>The number of possible <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>s.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>WeightedDie</code> that is a copy of the given <code>WeightedDie</code>.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV13probabilitiesAA7ChancesVvp":{"name":"probabilities","abstract":"<p>The probabilities of all possible rolls.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this <code>WeightedDie</code> and returns the result as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/WeightedDie.html#/s:7DiceKit11WeightedDieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/WeightedDie.html#/s:7DiceKit11WeightedDieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV19doubleAverageResultSdvp":{"name":"doubleAverageResult","abstract":"<p>The exact (double) average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/WeightedDie.html#/s:7DiceKit11WeightedDieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV13averageResultSivp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/WeightedDie.html#/s:7DiceKit11WeightedDieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV8canReachySbSi_AA14RollComparisonOtF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether this <code>WeightedDie</code> can reach the target <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code> using the given comparison type.</p>","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"WeightedDie"},"Structs/WeightedDie.html#/s:7DiceKit11WeightedDieV4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>WeightedDie</code> with separate memory.</p>","parent_name":"WeightedDie"},"Structs/Dice.html#/s:7DiceKit0A0V4diceSDyAA3DieVSiGvp":{"name":"dice","abstract":"<p>The dice that make up this collection, along with how many times they appear.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V08numberOfA0Sivp":{"name":"numberOfDice","abstract":"<p>The number of dice in this <code>Dice</code> instance.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V8modifierSivp":{"name":"modifier","abstract":"<p>The modifier added or subtracted from these <code>Dice</code></p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0VyAcA3DieVd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V4diceACSayAA3DieVG_tcfc":{"name":"init(dice:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V_5countAcA3DieV_Sitcfc":{"name":"init(_:count:)","abstract":"<p>Creates a new <code>Dice</code> object with the given number of the specified die. This is essentially identical to <code>Dice(copyOf: die * count)</code>, but is more efficient.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0VyAcA3DieV3die_Si5counttd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice. They should be in a (die: Die, count: Int) form, with the die being the type of die to add, and the count being the number of times to add it.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V_12withModifierAcA3DieVd_Sitcfc":{"name":"init(_:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V4dice12withModifierACSayAA3DieVG_Sitcfc":{"name":"init(dice:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V_5count12withModifierAcA3DieV_S2itcfc":{"name":"init(_:count:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the given number of the specified die, along with the specified modifier. This is essentially identical to <code>Dice(copyOf: (die * count) + modifier)</code>, but is more efficient.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V_12withModifierAcA3DieV3die_Si5counttd_Sitcfc":{"name":"init(_:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier. The dice should be in a (die: Die, count: Int) form, with the die being the type of die to add, and the count being the number of times to add it.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0VyACSSKcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object from the specified string in dice notation.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>Dice</code> object that is a copy of the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V13probabilitiesAA7ChancesVvp":{"name":"probabilities","abstract":"<p>The probabilities of all possible rolls.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Dice.html#/s:7DiceKit0A0V4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Dice.html#/s:7DiceKit0A0V4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V13averageResultSivp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Dice.html#/s:7DiceKit0A0V4rollSiyF\">roll()</a></code> method.","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V8canReachySbSi_AA14RollComparisonOtF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether this <code>Dice</code> object can reach the target <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code> using the given comparison type.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V11descriptionSSvp":{"name":"description","abstract":"<p>A description of this <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A short, debug-usable description of this <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>Dice</code> with separate memory.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyA2C_AA3DieVtFZ":{"name":"+(_:_:)","abstract":"<p>Adds some <code>Dice</code> and a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html\">Die</a></code> together, creating a new <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyAcA3DieV_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds some <code>Dice</code> and a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html\">Die</a></code> together, creating a new <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds some <code>Dice</code> together, creating a new <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Adds a modifier to a <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyACSi_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds a modifier to a <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyA2C_AA3DieV3die_Si5countttFZ":{"name":"+(_:_:)","abstract":"<p>Adds the given dice to the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1poiyAcA3DieV3die_Si5countt_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds the given dice to the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1soiyA2C_SitFZ":{"name":"-(_:_:)","abstract":"<p>Subtracts a modifier from a <code>Dice</code> object.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1moiyA2C_SitFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies the given <code>Dice</code> object by the given multiplier.</p>","parent_name":"Dice"},"Structs/Dice.html#/s:7DiceKit0A0V1moiyACSi_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies the given <code>Dice</code> object by the given multiplier.</p>","parent_name":"Dice"},"Structs/Die.html#/s:7DiceKit3DieV5sidesSivp":{"name":"sides","abstract":"<p>The number of sides on this <code>Die</code>. This value does not need to be possible (for example, it can be 13), but it <em>does</em> need to be larger than 0.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV5sidesACSi_tKcfc":{"name":"init(sides:)","abstract":"<p>Creates a new <code>Die</code> with the given number of sides.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieVyACSSKcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Die</code> from the given string in dice notation.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>Die</code> that is a copy of the given <code>Die</code>.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV13probabilitiesAA7ChancesVvp":{"name":"probabilities","abstract":"<p>The probabilities of all possible rolls.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this <code>Die</code> and returns the result as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html#/s:7DiceKit3DieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html#/s:7DiceKit3DieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV19doubleAverageResultSdvp":{"name":"doubleAverageResult","abstract":"<p>The exact (double) average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html#/s:7DiceKit3DieV4rollSiyF\">roll()</a></code> method.","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV13averageResultSivp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html#/s:7DiceKit3DieV4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV8canReachySbSi_AA14RollComparisonOtF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether this <code>Die</code> can reach the target <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code> using the given comparison type.</p>","parent_name":"Die"},"Structs/Die.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Die"},"Structs/Die.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Die"},"Structs/Die.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Die"},"Structs/Die.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Die"},"Structs/Die.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>Die</code> with separate memory.</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV2d4ACvpZ":{"name":"d4","abstract":"<p>A four-sided die (<code>d4</code>).</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV2d6ACvpZ":{"name":"d6","abstract":"<p>A six-sided die (<code>d6</code>).</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV2d8ACvpZ":{"name":"d8","abstract":"<p>An eight-sided die (<code>d8</code>).</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV3d10ACvpZ":{"name":"d10","abstract":"<p>A ten-sided die (<code>d10</code>).</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV3d12ACvpZ":{"name":"d12","abstract":"<p>A twelve-sided die (<code>d12</code>).</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV3d20ACvpZ":{"name":"d20","abstract":"<p>A twenty-sided die (<code>d20</code>).</p>","parent_name":"Die"},"Structs/Die.html#/s:7DiceKit3DieV4d100ACvpZ":{"name":"d100","abstract":"<p>A one hundred-sided die (<code>d100</code>).</p>","parent_name":"Die"},"Protocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this object and returns the result.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP4roll5times_S2i_AA18MultipleRollResultOtF":{"name":"roll(times:_:)","abstract":"<p>Rolls this object the given number of times and returns the given result type.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP13averageResultSivp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP8canReachySbSi_AA14RollComparisonOtF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether or not this object can reach the target Roll, compared by the given comparison.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP6chance2of_AA6ChanceVSi_AA14RollComparisonOtF":{"name":"chance(of:_:)","abstract":"<p>Determines the chance of rolling the target <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>, compared by the given comparison.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP6chance2ofAA6ChanceVSnySiG_tF":{"name":"chance(of:)","abstract":"<p>Determines the chance of rolling in the given range.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP6chance2ofAA6ChanceVSNySiG_tF":{"name":"chance(of:)","abstract":"<p>Determines the chance of rolling in the given range.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP6chance2ofAA6ChanceVs16PartialRangeFromVySiG_tF":{"name":"chance(of:)","abstract":"<p>Determines the chance of rolling in the given range.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP6chance2ofAA6ChanceVs16PartialRangeUpToVySiG_tF":{"name":"chance(of:)","abstract":"<p>Determines the chance of rolling in the given range.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP6chance2ofAA6ChanceVs19PartialRangeThroughVySiG_tF":{"name":"chance(of:)","abstract":"<p>Determines the chance of rolling in the given range.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP13probabilitiesAA7ChancesVvp":{"name":"probabilities","abstract":"<p>The probabilities of all possible rolls.</p>","parent_name":"Rollable"},"Protocols/Rollable.html":{"name":"Rollable","abstract":"<p>An object that is rollable. It must have a <code>roll()</code> method that returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code> object.</p>"},"Structs/Die.html":{"name":"Die","abstract":"<p>A representation of a single die.</p>"},"Structs/Dice.html":{"name":"Dice","abstract":"<p>A collection of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Die.html\">Die</a></code> objects and/or a modifier that can be rolled using the <code>roll()</code> method.</p>"},"Structs/WeightedDie.html":{"name":"WeightedDie","abstract":"<p>A representation of a weighted die; i.e. a die whose sides do not necessarily have the same chance of being rolled.</p>"},"Rollables.html":{"name":"Rollables"},"Results.html":{"name":"Results"},"Custom Dice.html":{"name":"Custom Dice"},"Probability.html":{"name":"Probability"},"Other Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other Typealiases.html":{"name":"Other Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}