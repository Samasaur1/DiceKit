{"Results.html#/s:7DiceKit4Rolla":{"name":"Roll","abstract":"<p>The result of any <code>roll</code> method from any <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html\">Rollable</a></code> type.</p>"},"Classes/Dice.html#/s:7DiceKit0A0C4diceSDyAA3DieCSiGvp":{"name":"dice","abstract":"<p>The dice that make up this collection, along with how many times they appear.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C08numberOfA0Sivp":{"name":"numberOfDice","abstract":"<p>The number of dice in this <code>Dice</code> instance.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C8modifierSivp":{"name":"modifier","abstract":"<p>The modifier added or subtracted from these <code>Dice</code></p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0CyAcA3DieCd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4diceACSayAA3DieCG_tcfc":{"name":"init(dice:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_5countAcA3DieC_Sitcfc":{"name":"init(_:count:)","abstract":"<p>Creates a new <code>Dice</code> object with the given number of the specified die. This is essentially identical to <code>Dice(copyOf: die * count)</code>, but is more efficient.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0CyAcA3DieC3die_Si5counttd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice. They should be in a (die: Die, count: Int) form, with the die being the type of die to add, and the count being the number of times to add it.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_12withModifierAcA3DieCd_Sitcfc":{"name":"init(_:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4dice12withModifierACSayAA3DieCG_Sitcfc":{"name":"init(dice:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_5count12withModifierAcA3DieC_S2itcfc":{"name":"init(_:count:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the given number of the specified die, along with the specified modifier. This is essentially identical to <code>Dice(copyOf: (die * count) + modifier)</code>, but is more efficient.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_12withModifierAcA3DieC3die_Si5counttd_Sitcfc":{"name":"init(_:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier. The dice should be in a (die: Die, count: Int) form, with the die being the type of die to add, and the count being the number of times to add it.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>Dice</code> object that is a copy of the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4roll5times_S2i_AA18MultipleRollResultOtF":{"name":"roll(times:_:)","abstract":"<p>Rolls this <code>Dice</code> object the given number of times and returns the given result type.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Dice.html#/s:7DiceKit0A0C4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Dice.html#/s:7DiceKit0A0C4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C11descriptionSSvp":{"name":"description","abstract":"<p>A description of this <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A short, debug-usable description of this <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>Dice</code> with separate memory.</p>","parent_name":"Dice"},"Classes/Die.html#/s:7DiceKit3DieC5sidesSivp":{"name":"sides","abstract":"<p>The number of sides on this <code>Die</code>. This value does not need to be possible (for example, it can be 13), but it <em>does</em> need to be larger than 0.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC5sidesACSgSi_tcfc":{"name":"init(sides:)","abstract":"<p>Creates a new <code>Die</code> with the given number of sides.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>Die</code> that is a copy of the given <code>Die</code>.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this <code>Die</code> and returns the result as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code>.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4roll5times_S2i_AA18MultipleRollResultOtF":{"name":"roll(times:_:)","abstract":"<p>Rolls this Die the given number of times and returns the given result type.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html#/s:7DiceKit3DieC4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html#/s:7DiceKit3DieC4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Die"},"Classes/Die.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Die"},"Classes/Die.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Die"},"Classes/Die.html#/hash(into:)":{"name":"hash(into:)","parent_name":"Die"},"Classes/Die.html#/s:SH9hashValueSivp":{"name":"hashValue","parent_name":"Die"},"Classes/Die.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Die"},"Classes/Die.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>Die</code> with separate memory.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC2d4ACvpZ":{"name":"d4","abstract":"<p>A four-sided die (<code>d4</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC2d6ACvpZ":{"name":"d6","abstract":"<p>A six-sided die (<code>d6</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC2d8ACvpZ":{"name":"d8","abstract":"<p>An eight-sided die (<code>d8</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC3d10ACvpZ":{"name":"d10","abstract":"<p>A ten-sided die (<code>d10</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC3d12ACvpZ":{"name":"d12","abstract":"<p>A twelve-sided die (<code>d12</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC3d20ACvpZ":{"name":"d20","abstract":"<p>A twenty-sided die (<code>d20</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4d100ACvpZ":{"name":"d100","abstract":"<p>A one hundred-sided die (<code>d100</code>).</p>","parent_name":"Die"},"Protocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF":{"name":"roll()","abstract":"<p>Rolls this object and returns the result.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP4roll5times_S2i_AA18MultipleRollResultOtF":{"name":"roll(times:_:)","abstract":"<p>Rolls this object the given number of times and returns the given result type.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP13minimumResultSivp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Rollable"},"Protocols/Rollable.html#/s:7DiceKit8RollableP13maximumResultSivp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rollable.html#/s:7DiceKit8RollableP4rollSiyF\">roll()</a></code> method.</p>","parent_name":"Rollable"},"Protocols/Rollable.html":{"name":"Rollable","abstract":"<p>An object that is rollable. It must have a <code>roll()</code> method that returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbResults.html#/s:7DiceKit4Rolla\">Roll</a></code> object.</p>"},"Classes/Die.html":{"name":"Die","abstract":"<p>A representation of a single die.</p>"},"Classes/Dice.html":{"name":"Dice","abstract":"<p>A collection of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html\">Die</a></code> objects and/or a modifier that can be rolled using the <code>roll()</code> method.</p>"},"Rollables.html":{"name":"Rollables"},"Results.html":{"name":"Results"}}